<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd http://www.springframework.org/schema/aop https://www.springframework.org/schema/aop/spring-aop.xsd">
    <!--注解扫描-->
    <context:component-scan base-package="com.my"/>

    <!--引入外部的资源文件-->
    <context:property-placeholder location="classpath:jdbc.properties"/>

    <!--存放各种Bean的配置-->
    <!--数据源的Bean-->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
        <property name="driverClassName" value="${driver}"/>
        <property name="url" value="${url}"/>
        <!--这里要注意不要和系统的用户名与密码冲突-->
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
        <!--初始化数量-->
        <property name="initialSize" value="8"/>
        <!--最小闲置数-->
        <property name="minIdle" value="3"/>
        <!--最大的活动链接数量-->
        <property name="maxActive" value="20"/>
        <!--等待超时时间-->
        <property name="maxWait" value="60000"/>
    </bean>

    <!--配置SqlSessionFactoryBean:将Mybatis中的SqlSessionFactory交给Spring容器管理-->
    <bean id="sqlSessionFactoryBean" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!--配置数据源引用-->
        <property name="dataSource" ref="dataSource"/>
        <!--配置映射文件-->
        <property name="mapperLocations" value="classpath:mapper/*.xml"/>
        <!--配置别名的基础包-->
        <property name="typeAliasesPackage" value="com.my.entity"/>
        <!--对应mybatis种的setting配置-->
        <!--<property name="configurationProperties"/>-->
        <!--单独制定mybatis的配置文件-->
        <!--<property name="configLocation" value="Mybatis配置文件路径"/>-->
        <property name="plugins">
            <array>
                <bean class="com.github.pagehelper.PageInterceptor">
                    <property name="properties">
                        <value>
                            helperDialect=postgresql
                            reasonable=true
                        </value>
                    </property>
                </bean>
            </array>
        </property>
    </bean>
    <!--mapper接口扫描器:可以让Service 自动 依赖 Mapper接口-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!--注意：sqlSessionFactoryBeanName ，value="name"-->
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactoryBean"/>
        <!--mapper接口所在的包-->
        <property name="basePackage" value="com.my.mapper"/>
    </bean>

    <!--事务配置-->
    <!--1、配置事务管理器-->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <!--使用注解-->
    <tx:annotation-driven transaction-manager="transactionManager"/>

</beans>